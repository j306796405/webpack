{"version":3,"sources":["cb0f927b862e09de73b1.js","./src/js/ui/slider.js"],"names":["webpackJsonp",4,"module","exports","require","$","Slider","f","this","el","items","sizes","max","current","interval","opts","speed","delay","complete","dots","fluid","_","init","ul","children","outerWidth","outerHeight","each","calculate","extend","setup","index","me","width","height","css","overflow","first","length","position","start","hover","stop","resize","Math","min","round","parent","window","arrows","append","find","click","className","indexOf","isFunction","prev","next","event","swipe","on","move","cb","eq","target","obj","is","addClass","siblings","removeClass","animate","left","data","setInterval","clearInterval","html","o","len","instance"],"mappings":"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","file":"cb0f927b862e09de73b1.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 4:\n/***/ function(module, exports, require) {\n\n\t\r\n\t  var $ = require(1);\r\n\t\r\n\t  var Slider = function() {\r\n\t\r\n\t    var f = false;\r\n\t\r\n\t    this.el = f;\r\n\t    this.items = f;\r\n\t\r\n\t    //  Dimensions\r\n\t    this.sizes = [];\r\n\t    this.max = [0,0];\r\n\t\r\n\t    //  Current inded\r\n\t    this.current = 0;\r\n\t\r\n\t    //  Start/stop timer\r\n\t    this.interval = f;\r\n\t\r\n\t    //  Set some options\r\n\t    this.opts = {\r\n\t      speed: 500,\r\n\t      delay: 3000, // f for no autoplay\r\n\t      complete: f, // when a slide's finished\r\n\t      dots: f, // display pagination\r\n\t      fluid: f // is it a percentage width?,\r\n\t    };\r\n\t\r\n\t    //  Create a deep clone for methods where context changes\r\n\t    var _ = this;\r\n\t\r\n\t    this.init = function(el, opts) {\r\n\t      this.el = el;\r\n\t      this.ul = el.children('ul');\r\n\t      this.max = [el.outerWidth(), el.outerHeight()];\r\n\t      this.items = this.ul.children('li').each(this.calculate);\r\n\t\r\n\t      //  Check whether we're passing any options in to Slider\r\n\t      this.opts = $.extend(this.opts, opts);\r\n\t\r\n\t      //  Set up the Slider\r\n\t      this.setup();\r\n\t\r\n\t      return this;\r\n\t    };\r\n\t\r\n\t    //  Get the width for an element\r\n\t    //  Pass a jQuery element as the context with .call(), and the index as a parameter: Slider.calculate.call($('li:first'), 0)\r\n\t    this.calculate = function(index) {\r\n\t      var me = $(this),\r\n\t          width = me.outerWidth(), height = me.outerHeight();\r\n\t\r\n\t      //  Add it to the sizes list\r\n\t      _.sizes[index] = [width, height];\r\n\t\r\n\t      //  Set the max values\r\n\t      if(width > _.max[0]) _.max[0] = width;\r\n\t      if(height > _.max[1]) _.max[1] = height;\r\n\t    };\r\n\t\r\n\t    //  Work out what methods need calling\r\n\t    this.setup = function() {\r\n\t      //  Set the main element\r\n\t      this.el.css({\r\n\t        overflow: 'hidden',\r\n\t        width: _.max[0],\r\n\t        height: this.items.first().outerHeight()\r\n\t      });\r\n\t\r\n\t      //  Set the relative widths\r\n\t      this.ul.css({width: (this.items.length * 100) + '%', position: 'relative'});\r\n\t      this.items.css('width', (100 / this.items.length) + '%');\r\n\t\r\n\t      if(this.opts.delay !== f) {\r\n\t        this.start();\r\n\t        this.el.hover(this.stop, this.start);\r\n\t      }\r\n\t\r\n\t\r\n\t      //  Dot pagination\r\n\t      this.opts.dots && this.dots();\r\n\t\r\n\t      //  Little patch for fluid-width sliders. Screw those guys.\r\n\t      if(this.opts.fluid) {\r\n\t        var resize = function() {\r\n\t          _.el.css('width', Math.min(Math.round((_.el.outerWidth() / _.el.parent().outerWidth()) * 100), 100) + '%');\r\n\t        };\r\n\t\r\n\t        resize();\r\n\t        $(window).resize(resize);\r\n\t      }\r\n\t      if(this.opts.arrows) {\r\n\t        this.el.parent().append('<div class=\"slider-arrow prev\"><i></i></div><div class=\"slider-arrow next\"><i></i></div>')\r\n\t            .find('.slider-arrow').click(function() {\r\n\t              if (this.className.indexOf('prev') > 0) {\r\n\t                $.isFunction(_.prev) && _.prev();\r\n\t              } else if (this.className.indexOf('next') > 0) {\r\n\t                $.isFunction(_.next) && _.next();\r\n\t              }\r\n\t            });\r\n\t      };\r\n\t\r\n\t      //  Swipe support\r\n\t      if($.event.swipe) {\r\n\t        this.el.on('swipeleft', _.prev).on('swiperight', _.next);\r\n\t      }\r\n\t    };\r\n\t\r\n\t    //  Move Slider to a slide index\r\n\t    this.move = function(index, cb) {\r\n\t      //  If it's out of bounds, go to the first slide\r\n\t      if(!this.items.eq(index).length) index = 0;\r\n\t      if(index < 0) index = (this.items.length - 1);\r\n\t\r\n\t      var target = this.items.eq(index);\r\n\t      var obj = {height: target.outerHeight()};\r\n\t      var speed = cb ? 5 : this.opts.speed;\r\n\t\r\n\t      if(!this.ul.is(':animated')) {\r\n\t        //  Handle those pesky dots\r\n\t        _.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\r\n\t\r\n\t        this.el.animate(obj, speed) && this.ul.animate($.extend({left: '-' + index + '00%'}, obj), speed, function(data) {\r\n\t          _.current = index;\r\n\t          $.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\r\n\t        });\r\n\t      }\r\n\t    };\r\n\t\r\n\t    //  Autoplay functionality\r\n\t    this.start = function() {\r\n\t      _.interval = setInterval(function() {\r\n\t        _.move(_.current + 1);\r\n\t      }, _.opts.delay);\r\n\t    };\r\n\t\r\n\t    //  Stop autoplay\r\n\t    this.stop = function() {\r\n\t      _.interval = clearInterval(_.interval);\r\n\t      return _;\r\n\t    };\r\n\t\r\n\t\r\n\t    //  Arrow navigation\r\n\t    this.next = function() { return _.stop().move(_.current + 1) };\r\n\t    this.prev = function() { return _.stop().move(_.current - 1) };\r\n\t\r\n\t    this.dots = function() {\r\n\t      //  Create the HTML\r\n\t      var html = '<ol class=\"dots\">';\r\n\t      $.each(this.items, function(index) { html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>'; });\r\n\t      html += '</ol>';\r\n\t\r\n\t      //  Add it to the Slider\r\n\t      this.el.addClass('has-dots').append(html).find('.dot').click(function() {\r\n\t        _.move($(this).index());\r\n\t      });\r\n\t    };\r\n\t  };\r\n\t\r\n\t  //  Create a jQuery plugin\r\n\t  module.exports = function(o) {\r\n\t    var len = this.length;\r\n\t\r\n\t    //  Enable multiple-slider support\r\n\t    return this.each(function(index) {\r\n\t      //  Cache a copy of $(this), so it\r\n\t      var me = $(this);\r\n\t      var instance = (new Slider).init(me, o);\r\n\t\r\n\t      //  Invoke an Slider instance\r\n\t      me.data('slider' + (len > 1 ? '-' + (index + 1) : ''), instance);\r\n\t    });\r\n\t  };\r\n\n\n/***/ }\n\n})","\r\n  var $ = require('jquery');\r\n\r\n  var Slider = function() {\r\n\r\n    var f = false;\r\n\r\n    this.el = f;\r\n    this.items = f;\r\n\r\n    //  Dimensions\r\n    this.sizes = [];\r\n    this.max = [0,0];\r\n\r\n    //  Current inded\r\n    this.current = 0;\r\n\r\n    //  Start/stop timer\r\n    this.interval = f;\r\n\r\n    //  Set some options\r\n    this.opts = {\r\n      speed: 500,\r\n      delay: 3000, // f for no autoplay\r\n      complete: f, // when a slide's finished\r\n      dots: f, // display pagination\r\n      fluid: f // is it a percentage width?,\r\n    };\r\n\r\n    //  Create a deep clone for methods where context changes\r\n    var _ = this;\r\n\r\n    this.init = function(el, opts) {\r\n      this.el = el;\r\n      this.ul = el.children('ul');\r\n      this.max = [el.outerWidth(), el.outerHeight()];\r\n      this.items = this.ul.children('li').each(this.calculate);\r\n\r\n      //  Check whether we're passing any options in to Slider\r\n      this.opts = $.extend(this.opts, opts);\r\n\r\n      //  Set up the Slider\r\n      this.setup();\r\n\r\n      return this;\r\n    };\r\n\r\n    //  Get the width for an element\r\n    //  Pass a jQuery element as the context with .call(), and the index as a parameter: Slider.calculate.call($('li:first'), 0)\r\n    this.calculate = function(index) {\r\n      var me = $(this),\r\n          width = me.outerWidth(), height = me.outerHeight();\r\n\r\n      //  Add it to the sizes list\r\n      _.sizes[index] = [width, height];\r\n\r\n      //  Set the max values\r\n      if(width > _.max[0]) _.max[0] = width;\r\n      if(height > _.max[1]) _.max[1] = height;\r\n    };\r\n\r\n    //  Work out what methods need calling\r\n    this.setup = function() {\r\n      //  Set the main element\r\n      this.el.css({\r\n        overflow: 'hidden',\r\n        width: _.max[0],\r\n        height: this.items.first().outerHeight()\r\n      });\r\n\r\n      //  Set the relative widths\r\n      this.ul.css({width: (this.items.length * 100) + '%', position: 'relative'});\r\n      this.items.css('width', (100 / this.items.length) + '%');\r\n\r\n      if(this.opts.delay !== f) {\r\n        this.start();\r\n        this.el.hover(this.stop, this.start);\r\n      }\r\n\r\n\r\n      //  Dot pagination\r\n      this.opts.dots && this.dots();\r\n\r\n      //  Little patch for fluid-width sliders. Screw those guys.\r\n      if(this.opts.fluid) {\r\n        var resize = function() {\r\n          _.el.css('width', Math.min(Math.round((_.el.outerWidth() / _.el.parent().outerWidth()) * 100), 100) + '%');\r\n        };\r\n\r\n        resize();\r\n        $(window).resize(resize);\r\n      }\r\n      if(this.opts.arrows) {\r\n        this.el.parent().append('<div class=\"slider-arrow prev\"><i></i></div><div class=\"slider-arrow next\"><i></i></div>')\r\n            .find('.slider-arrow').click(function() {\r\n              if (this.className.indexOf('prev') > 0) {\r\n                $.isFunction(_.prev) && _.prev();\r\n              } else if (this.className.indexOf('next') > 0) {\r\n                $.isFunction(_.next) && _.next();\r\n              }\r\n            });\r\n      };\r\n\r\n      //  Swipe support\r\n      if($.event.swipe) {\r\n        this.el.on('swipeleft', _.prev).on('swiperight', _.next);\r\n      }\r\n    };\r\n\r\n    //  Move Slider to a slide index\r\n    this.move = function(index, cb) {\r\n      //  If it's out of bounds, go to the first slide\r\n      if(!this.items.eq(index).length) index = 0;\r\n      if(index < 0) index = (this.items.length - 1);\r\n\r\n      var target = this.items.eq(index);\r\n      var obj = {height: target.outerHeight()};\r\n      var speed = cb ? 5 : this.opts.speed;\r\n\r\n      if(!this.ul.is(':animated')) {\r\n        //  Handle those pesky dots\r\n        _.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\r\n\r\n        this.el.animate(obj, speed) && this.ul.animate($.extend({left: '-' + index + '00%'}, obj), speed, function(data) {\r\n          _.current = index;\r\n          $.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\r\n        });\r\n      }\r\n    };\r\n\r\n    //  Autoplay functionality\r\n    this.start = function() {\r\n      _.interval = setInterval(function() {\r\n        _.move(_.current + 1);\r\n      }, _.opts.delay);\r\n    };\r\n\r\n    //  Stop autoplay\r\n    this.stop = function() {\r\n      _.interval = clearInterval(_.interval);\r\n      return _;\r\n    };\r\n\r\n\r\n    //  Arrow navigation\r\n    this.next = function() { return _.stop().move(_.current + 1) };\r\n    this.prev = function() { return _.stop().move(_.current - 1) };\r\n\r\n    this.dots = function() {\r\n      //  Create the HTML\r\n      var html = '<ol class=\"dots\">';\r\n      $.each(this.items, function(index) { html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>'; });\r\n      html += '</ol>';\r\n\r\n      //  Add it to the Slider\r\n      this.el.addClass('has-dots').append(html).find('.dot').click(function() {\r\n        _.move($(this).index());\r\n      });\r\n    };\r\n  };\r\n\r\n  //  Create a jQuery plugin\r\n  module.exports = function(o) {\r\n    var len = this.length;\r\n\r\n    //  Enable multiple-slider support\r\n    return this.each(function(index) {\r\n      //  Cache a copy of $(this), so it\r\n      var me = $(this);\r\n      var instance = (new Slider).init(me, o);\r\n\r\n      //  Invoke an Slider instance\r\n      me.data('slider' + (len > 1 ? '-' + (index + 1) : ''), instance);\r\n    });\r\n  };\r\n"],"sourceRoot":"webpack-module://"}